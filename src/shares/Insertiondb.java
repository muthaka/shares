/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package shares;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author MUTHAKA
 */
public class Insertiondb extends javax.swing.JFrame {
String table;
String june,july,aug,sep,oct,nov,dec;
String jan,feb,march,april,may,junee,julyy;
String cic,ev,ex,hm,ken,kk,ka,ko,ma,ms,oc,sf,sa;


private Connection con;
private PreparedStatement stt;
private ResultSet cr;
    /**
     * Creates new form Insertiondb
     */
    public Insertiondb() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtcic = new javax.swing.JTextField();
        txteveready = new javax.swing.JTextField();
        txtexpress = new javax.swing.JTextField();
        txthome = new javax.swing.JTextField();
        txtkengen = new javax.swing.JTextField();
        txtkenol = new javax.swing.JTextField();
        txtairways = new javax.swing.JTextField();
        txtorchads = new javax.swing.JTextField();
        txtmarshalls = new javax.swing.JTextField();
        txtmumias = new javax.swing.JTextField();
        txtolympia = new javax.swing.JTextField();
        txtsafaricom = new javax.swing.JTextField();
        txtsameer = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        combotable = new javax.swing.JComboBox();
        btnclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("SELECT MONTH");

        jLabel2.setText("CIC-INSURANCE");

        jLabel3.setText("EVEREADY");

        jLabel4.setText("EXPRESS");

        jLabel5.setText("KENGEN");

        jLabel6.setText("KENOLKOBIL");

        jLabel7.setText("KENYA-AIRWAYS");

        jLabel8.setText("KENYA-ORCHADS");

        jLabel9.setText("MARSHALLS");

        jLabel10.setText("MUMIAS-SUGAR");

        jLabel11.setText("OLYMPIA-CAPITAL");

        jLabel12.setText("SAFARICOM");

        jLabel13.setText("SAMEER-AFRICA");

        jLabel15.setText("HOME-AFRIKA");

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        combotable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "august2014", "september2014", "october2014", "november2014", "december2014", "january2015", "february2015", "march2015", "april2015", "may2015", "june2015", "july2015", "august2015", "september2015", "november2015", "december2015" }));

        btnclear.setText("CLEAR");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(combotable, 0, 158, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcic, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(txteveready)
                            .addComponent(txtexpress)
                            .addComponent(txthome)
                            .addComponent(txtkengen)
                            .addComponent(txtkenol)
                            .addComponent(txtairways))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtmumias, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(txtsafaricom)
                            .addComponent(txtsameer)
                            .addComponent(txtmarshalls)
                            .addComponent(txtolympia))
                        .addComponent(btnclear, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(txtorchads, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combotable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(txtorchads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(txteveready, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmarshalls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addComponent(txtexpress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmumias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel11)
                    .addComponent(txthome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtolympia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12)
                    .addComponent(txtkengen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsafaricom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13)
                    .addComponent(txtkenol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsameer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtairways, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsave)
                    .addComponent(btnclear))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
         try
        {
            /* connecting to the database */
           Class.forName("com.mysql.jdbc.Driver");
           con = DriverManager.getConnection("jdbc:mysql://localhost:3306/shares","root","root");
           table = combotable.getSelectedItem().toString();
           
           cic = txtcic.getText();        
           ev = txteveready.getText();          
           ex = txtexpress.getText();           
           hm = txthome.getText();          
           ken = txtkengen.getText();           
           kk = txtkenol.getText();          
           ka = txtairways.getText();          
           ko = txtorchads.getText();          
           ma = txtmarshalls.getText();          
           ms = txtmumias.getText();          
           oc = txtolympia.getText(); 
           sf = txtsafaricom.getText();        
           sa = txtsameer.getText();
           
           
           
           
           june = ("INSERT INTO JUNE2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           july = ("INSERT INTO JULY2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           aug = ("INSERT INTO AUGUST2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           sep = ("INSERT INTO SEPTEMBER2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           oct = ("INSERT INTO OCTOBER2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           nov = ("INSERT INTO NOVEMBER2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           dec = ("INSERT INTO DECEMBER2014(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           jan = ("INSERT INTO JANUARY2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           feb = ("INSERT INTO FEBRUARY2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           march = ("INSERT INTO MARCH2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           april = ("INSERT INTO APRIL2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           may = ("INSERT INTO MAY2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           junee = ("INSERT INTO JUNE2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           julyy = ("INSERT INTO JULY2015(CIC_Insurance,Eveready_EA,Express,Home_Afrika_Ltd,Kengen"
                   + ",Kenolkobil,Kenya_Airways,Kenya_Orchads,Marshalls_EA,Mumias_Sugar,"
                   + "Olympia_Capital,Safaricom_Limited,Sameer_Africa) "
                   + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
           if((cic.length()!=0)&&(ev.length()!=0)&&(ex.length()!=0)&&(hm.length()!=0)&&(ken.length()!=0)&&
                   (kk.length()!=0)&&(ka.length()!=0)&&(ko.length()!=0)&&(ma.length()!=0)&&(ms.length()!=0)&&
                   (oc.length()!=0)&&(sf.length()!=0)&&(sa.length()!=0)) {
           try{
              
          
            if(table.equals("june2014"))
            {
             // cr = st.executeQuery(june); 
              stt = con.prepareStatement(june);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("july2014"))
            {
              stt = con.prepareStatement(july);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully"); 
            }
            
            if(table.equals("august2014"))
            {
              stt = con.prepareStatement(aug);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            
            if(table.equals("september2014"))
            {
              stt = con.prepareStatement(sep);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            
            if(table.equals("october2014"))
            {
              stt = con.prepareStatement(oct);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            
            if(table.equals("november2014"))
            {
              stt = con.prepareStatement(nov);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            
            if(table.equals("december2014"))
            {
              stt = con.prepareStatement(dec);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            
            if(table.equals("january2015"))
            {
              stt = con.prepareStatement(jan);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("february2015"))
            {
              stt = con.prepareStatement(feb);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("march2015"))
            {
                stt = con.prepareStatement(march);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("april2015"))
            {
                stt = con.prepareStatement(april);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("may2015"))
            {
                stt = con.prepareStatement(may);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("june2015"))
            {
                stt = con.prepareStatement(junee);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
            if(table.equals("july2015"))
            {
                stt = con.prepareStatement(julyy);
              stt.setString(1, cic);
              stt.setString(2, ev);
              stt.setString(3, ex);
              stt.setString(4, hm);
              stt.setString(5, ken);
              stt.setString(6, kk);
              stt.setString(7, ka);
              stt.setString(8, ko);
              stt.setString(9, ma);
              stt.setString(10, ms);
              stt.setString(11, oc);
              stt.setString(12, sf);
              stt.setString(13, sa);
              stt.executeUpdate();
              JOptionPane.showMessageDialog(null, "data saved successfully");
            }
           }
           catch(SQLException | HeadlessException e){
               JOptionPane.showMessageDialog(null, "Error"+e);
           }
           }
           else {
               JOptionPane.showMessageDialog(null, "Please Fill all Fields");
           }
        }
        catch(ClassNotFoundException | SQLException ex)
        {
            System.out.println("Error"+ex);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
            txtcic.setText("");        
            txteveready.setText("");          
            txtexpress.setText("");           
            txthome.setText("");          
            txtkengen.setText("");           
            txtkenol.setText("");          
            txtairways.setText("");          
            txtorchads.setText("");          
            txtmarshalls.setText("");          
            txtmumias.setText("");          
            txtolympia.setText(""); 
            txtsafaricom.setText("");        
            txtsameer.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insertiondb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insertiondb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insertiondb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insertiondb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Insertiondb i = new Insertiondb();
                i.setLocationRelativeTo(null);
                i.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox combotable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtairways;
    private javax.swing.JTextField txtcic;
    private javax.swing.JTextField txteveready;
    private javax.swing.JTextField txtexpress;
    private javax.swing.JTextField txthome;
    private javax.swing.JTextField txtkengen;
    private javax.swing.JTextField txtkenol;
    private javax.swing.JTextField txtmarshalls;
    private javax.swing.JTextField txtmumias;
    private javax.swing.JTextField txtolympia;
    private javax.swing.JTextField txtorchads;
    private javax.swing.JTextField txtsafaricom;
    private javax.swing.JTextField txtsameer;
    // End of variables declaration//GEN-END:variables
}
